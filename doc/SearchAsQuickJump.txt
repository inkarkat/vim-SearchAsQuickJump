*SearchAsQuickJump.txt* Quick search without affecting 'hlsearch', search pattern and history.

		    SEARCH AS QUICK JUMP    by Ingo Karkat
						       *SearchAsQuickJump.vim*
description			|SearchAsQuickJump-description|
usage				|SearchAsQuickJump-usage|
installation			|SearchAsQuickJump-installation|
configuration			|SearchAsQuickJump-configuration|
integration			|SearchAsQuickJump-integration|
limitations			|SearchAsQuickJump-limitations|
known problems			|SearchAsQuickJump-known-problems|
todo				|SearchAsQuickJump-todo|
history				|SearchAsQuickJump-history|

==============================================================================
DESCRIPTION				       *SearchAsQuickJump-description*

I use the built-in search (|/|, |?|, |n| and |N|) for two different purposes:
1. For quick mouseless navigation to a place not far away, or as a {motion}
   e.g. in d/{pattern}/.
2. For actual searches, when I'm looking for and examining all occurrences
   inside the buffer or even multiple windows.

Unfortunately, there's a tension in how to configure the search-related
settings: For quick searches, highlighting of matches is not important, as my
eyes are already focused on the target text, I just want to get there with the
fewest keystrokes, and figured that a search for "/:le" is faster than
"3fA4whhh". Because the search pattern is mostly incomplete made-up rubbish,
the highlighting should not continue to distract after the search; it should
be off (but 'incsearch' helps to recognize when enough of the pattern is typed
to reach the desired location). Likewise, the search pattern is useless in the
search history and as the last pattern for the |n| command, as I am unlikely
to repeat that search. On the other hand, for actual searches, history recall,
repeated search and highlighting of matches are vital and central to the task.

How can this be reconciled? This plugin sets up alternative mappings to the
<CR> key which normally concludes entering of the search pattern in
command-line mode. By pressing <S-CR>, a quick search is triggered instead of
a normal one. This quick search does not use search highlighting and the
search pattern is not added to the search history, so it can be used without
affecting the normal search.

Next / previous matches can be jumped to via separate mappings, but not via
the default |n| / |N| commands. (Even if the integration with the SearchRepeat
plugin is used; contrary to most other integrations, this quick search must be
explicitly activated via the |gnq| / |gnQ| mapping. )

HOW IT WORKS								     *

SOURCE									     *
(Original Vim tip, Stack Overflow answer, ...)

SEE ALSO								     *
(Plugins offering complementary functionality, or plugins using this library.)

RELATED WORKS								     *
(Alternatives from other authors, other approaches, references not used here.)

==============================================================================
USAGE						     *SearchAsQuickJump-usage*
						  *SearchAsQuickJump-searches*
/{pattern}[/]<S-CR>	When a search via |/| or |?| is sent off by pressing
?{pattern}[?]<S-CR>	<S-CR>, a quick forward / backward search is performed.
			Matches will not be highlighted via 'hlsearch', and
			the search pattern will not be added to the search
			history or used as the last pattern for |n| / |N|
			search repeats.
			Use this for a quick search without the formality and
			persistence of a normal search, which can still be
			obtained by concluding the pattern input with the
			default <CR> at the end.
								   *goq* *goQ*
[count]goq / goQ	Search forward / backward to the [count]'th occurrence
			of the quick search pattern. This is the equivalent to
			the default |n| / |N| search repeat commands.

The following commands are optional; cp. the |SearchAsQuickJump-configuration|
section below.
				  *qstar* *q#* *gqstar* *gq#* *v_qstar* *v_q#*
q*, q#			Search forward / backward for the [count]'th
			occurrence of the word nearest to the cursor.
gq*, gq#		Like above, but don't put "\<" and "\>" around the
			word. This makes the search also find matches that are
			not a whole word.
{Visual}q*		Do a quick search forward / backward for the [count]'th
{Visual}q#	    	occurrence of the current selection, like the built-in
			|g*| and |g#| commands.

			These mappings are based on the built-in |star| and
			|#| commands. Like with them, 'ignorecase' is used,
			'smartcase' is not.

If the SearchRepeat plugin is installed, a parallel set of "go now and for
next searches" mappings (starting with 'gn...' instead of 'go...') is
installed. These mappings have the same effect, but in addition re-program the
'n/N' keys to repeat this particular search (until another gn... search is
used).

==============================================================================
INSTALLATION				      *SearchAsQuickJump-installation*

This script is packaged as a |vimball|. If you have the "gunzip" decompressor
in your PATH, simply edit the *.vmb.gz package in Vim; otherwise, decompress
the archive first, e.g. using WinZip. Inside Vim, install by sourcing the
vimball or via the |:UseVimball| command. >
    vim SearchAsQuickJump*.vmb.gz
    :so %
To uninstall, use the |:RmVimball| command.

DEPENDENCIES				      *SearchAsQuickJump-dependencies*

- Requires Vim 7.0 or higher.

==============================================================================
CONFIGURATION				     *SearchAsQuickJump-configuration*

For a permanent configuration, put the following commands into your |vimrc|:
If you want commands like the built-in '*', 'g*', '#' and 'g#' commands (but
prefixed with 'q'), use: >
    :let g:SearchAsQuickJump_DefineStarCommands = 1
<
						     *SearchAsQuickJump-remap*
plugmap

==============================================================================
INTEGRATION				       *SearchAsQuickJump-integration*

==============================================================================
LIMITATIONS				       *SearchAsQuickJump-limitations*

KNOWN PROBLEMS				    *SearchAsQuickJump-known-problems*

TODO						      *SearchAsQuickJump-todo*

- Handle trailing /, ?.
- Warning if {offset} is specified.
- Handle {offset}.

IDEAS						     *SearchAsQuickJump-ideas*

==============================================================================
HISTORY						   *SearchAsQuickJump-history*

GOAL
First published version.

0.01	10-Jul-2009
Started development.

==============================================================================
Copyright: (C) 2009-2012 Ingo Karkat
The VIM LICENSE applies to this script; see |copyright|.

Maintainer:	Ingo Karkat <ingo@karkat.de>
==============================================================================
 vim:tw=78:ts=8:ft=help:norl:
